import datetime

import discord
from discord import app_commands, ui
from discord.ext import commands
from discord.utils import get
from mee6_py_api import API
from cogs.Rcon import command

mee6API = API(1087033528568524902)
id_channel_ticket_logs = 1096892647697821858
id_staff_role = 1087037553913364601
global embed_color
embed_color = 0x2f3136
class Questionnaire(ui.Modal, title='–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ö–æ–¥–∫–∏'):
    name = ui.TextInput(label='–í–∞—à –Ω–∏–∫–Ω–µ–π–º')

    def __init__(self) -> None:
        super().__init__()



    async def on_submit(self, interaction: discord.Interaction):
        role = interaction.guild.get_role(1087040322455994438)  # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Ä–æ–ª–∏*
        await interaction.user.add_roles(role)  # –≤—ã–¥–∞–µ–º –∞–≤—Ç–æ—Ä—É —Ä–æ–ª—å
        command(f"easywl add {self.name}")
        channel = get(interaction.guild.channels, id=1096892647697821858)
        embed = discord.Embed(title=f"{self.name} —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª –ø—Ä–æ—Ö–æ–¥–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä!",
                              timestamp=datetime.datetime.utcnow(),
                              description="–ï—Å–ª–∏ —Ç—ã —Ç–æ–∂–µ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ö–æ–¥–∫—É –±–µ—Å–ø–ª–∞—Ç–Ω–æ, —Ç–æ –¥–æ—Å—Ç–∏–≥–Ω–∏ 15 —É—Ä–æ–≤–Ω—è –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ!",
                              color=0x49aa3c)
        embed.set_footer(text="¬© MineSpace 2023")
        await channel.send(embed=embed)
        await interaction.response.send_message('–í–∞–º —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–∞ –ø—Ä–æ—Ö–æ–¥–∫–∞!', ephemeral=True)



### TICKET SYSTEM ###

class Select(discord.ui.Select):
    def __init__(self):
        options = [
            discord.SelectOption(label="–°—É–¥", value="–°—É–¥", description='–ï—Å–ª–∏ –í–∞–º –Ω—É–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Å—É–¥.', emoji='üí≤'),
            discord.SelectOption(label="–ñ–∞–ª–æ–±–∞", value="–ñ–∞–ª–æ–±–∞", description='–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É.',
                                 emoji='‚ñ∂'),
        ]
        super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", max_values=1, min_values=1, options=options)

    async def callback(self, interaction: discord.Interaction):
        guild = interaction.guild
        category = get(guild.categories, name="—Ç–∏–∫–µ—Ç—ã")
        rol_staff = guild.get_role(id_staff_role)
        if self.values[0] == "–°—É–¥":
            channel = await guild.create_text_channel(name=f'üìû„Éª—Å—É–¥-{interaction.user.name}', category=category)

            await channel.set_permissions(interaction.guild.get_role(interaction.guild.id), send_messages=False,
                                          read_messages=False)
            await channel.set_permissions(interaction.user, send_messages=True, read_messages=True, add_reactions=True,
                                          embed_links=True, attach_files=True, read_message_history=True,
                                          external_emojis=True)
            await channel.set_permissions(rol_staff, send_messages=True, read_messages=True, add_reactions=True,
                                          embed_links=True, attach_files=True, read_message_history=True,
                                          external_emojis=True, manage_messages=True)

            embed_question = discord.Embed(title=f'–°—É–¥ - –ü—Ä–∏–≤–µ—Ç, {interaction.user.name}!',
                                           description='–í —ç—Ç–æ–º —Ç–∏–∫–µ—Ç–µ —Ç—ã –º–æ–∂–µ—à—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Å—É–¥.\n\n–ï—Å–ª–∏ –í—ã –Ω—É–∂–¥–∞–µ—Ç–µ—Å—å –≤ —Å—Ä–æ—á–Ω–æ–π –ø–æ–º–æ—â–∏ - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É `üîî –í—ã–∑–≤–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏—é`.',
                                           color=embed_color)
            embed_question.set_thumbnail(url=interaction.user.avatar)

            await channel.send(interaction.user.mention, embed=embed_question, view=Call_Staff())
        elif self.values[0] == "–ñ–∞–ª–æ–±–∞":
            channel = await guild.create_text_channel(name=f'üìù„Éª–∂–∞–ª–æ–±–∞-{interaction.user.name}', category=category)

            await channel.set_permissions(interaction.guild.get_role(interaction.guild.id), send_messages=False,
                                          read_messages=False)
            await channel.set_permissions(interaction.user, send_messages=True, read_messages=True, add_reactions=True,
                                          embed_links=True, attach_files=True, read_message_history=True,
                                          external_emojis=True)
            await channel.set_permissions(rol_staff, send_messages=True, read_messages=True, add_reactions=True,
                                          embed_links=True, attach_files=True, read_message_history=True,
                                          external_emojis=True, manage_messages=True)

            embed_question = discord.Embed(title=f'–ñ–∞–ª–æ–±–∞ - –ü—Ä–∏–≤–µ—Ç, {interaction.user.name}!',
                                           description='–í —ç—Ç–æ–º —Ç–∏–∫–µ—Ç–µ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É.\n\n–ï—Å–ª–∏ –í—ã –Ω—É–∂–¥–∞–µ—Ç–µ—Å—å –≤ —Å—Ä–æ—á–Ω–æ–π –ø–æ–º–æ—â–∏ - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É `üîî –í—ã–∑–≤–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏—é`.',
                                           color=embed_color)
            embed_question.set_thumbnail(url=interaction.user.avatar)

            await channel.send(interaction.user.mention, embed=embed_question, view=Call_Staff())


class SelectView(discord.ui.View):
    def __init__(self, *, timeout=180):
        super().__init__(timeout=timeout)
        self.add_item(Select())




class TicketStart(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label='–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç', style=discord.ButtonStyle.green, emoji='üé≤',
                       custom_id='persistent_view:ticket')
    async def ticketstart(self, interaction: discord.Interaction, button: discord.ui.Button):
        canal = interaction.channel

        canal_logs = interaction.guild.get_channel(id_channel_ticket_logs)
        await interaction.response.send_message(view=SelectView(), ephemeral=True)


class Call_Staff(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label='–í—ã–∑–≤–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏—é', style=discord.ButtonStyle.blurple, emoji='üîî',
                       custom_id='persistent_view:call_staff')
    async def callstaff(self, interaction: discord.Interaction, button: discord.ui.Button):
        canal = interaction.channel
        canal_logs = interaction.guild.get_channel(id_channel_ticket_logs)
        embed_llamar_staff = discord.Embed(description=f"üîî {interaction.user.mention} –≤—ã–∑–≤–∞–ª –º–æ–¥–µ—Ä–∞—Ü–∏—é.",
                                           color=embed_color)
        await canal.send(f'<@&{id_staff_role}>', embed=embed_llamar_staff, delete_after=20)

    @discord.ui.button(label='–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç', style=discord.ButtonStyle.blurple, emoji='üîê',
                       custom_id='persistent_view:close_ticket')
    async def closeticket(self, interaction: discord.Interaction, button: discord.ui.Button):
        canal_logs = interaction.guild.get_channel(id_channel_ticket_logs)
        embed_cerrar_ticket = discord.Embed(description=f"‚ö†Ô∏è –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç?", color=embed_color)
        await interaction.response.send_message(interaction.user.mention, embed=embed_cerrar_ticket, view=Close_Podt())


class Close_Podt(discord.ui.View):

    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label='–î–∞', style=discord.ButtonStyle.green, emoji='‚úÖ', custom_id='persistent_view:close_yes')
    async def closeyes(self, interaction: discord.Interaction, button: discord.ui.Button):
        canal = interaction.channel
        canal_logs = interaction.guild.get_channel(id_channel_ticket_logs)
        await canal.delete()
        embed_logs = discord.Embed(title="–¢–∏–∫–µ—Ç—ã", description=f"", timestamp=datetime.datetime.utcnow(),
                                   color=embed_color)
        embed_logs.add_field(name="–¢–∏–∫–µ—Ç", value=f"{canal.name}", inline=True)
        embed_logs.add_field(name="–ó–∞–∫—Ä—ã—Ç (–∫–µ–º) - ", value=f"{interaction.user.mention}", inline=False)
        embed_logs.set_thumbnail(url=interaction.user.avatar)
        await canal_logs.send(embed=embed_logs)

    @discord.ui.button(label='–ù–µ—Ç', style=discord.ButtonStyle.red, emoji='‚ùå', custom_id='persistent_view:close_no')
    async def closeno(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.message.delete()


# Payment
class Complete_Pay(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label='–Ø –æ–ø–ª–∞—Ç–∏–ª', style=discord.ButtonStyle.green, emoji='‚úÖ',
                       custom_id='persistent_view:complete')
    async def completepay(self, interaction: discord.Interaction, button: discord.ui.Button):
        role = interaction.guild.get_role(1087033528568524905)
        await interaction.channel.send(f"{role.mention}, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ–Ω—å–≥–∏ –æ—Ç {interaction.user.mention}")


class Choose_Method_Pay(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        url = f"https://MineSpace.fun/"
        self.add_item(discord.ui.Button(label="EasyDonate", url=url, emoji="üì°"))

    @discord.ui.button(label='–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ö–æ–¥–∫—É', style=discord.ButtonStyle.green, emoji='üí≥',
                       custom_id='persistent_view:getlvl')
    async def getlvl(self, interaction: discord.Interaction, button: discord.ui.Button):

        role = interaction.guild.get_role(1087040322455994438)  # –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Ä–æ–ª–∏*

        level = await mee6API.levels.get_user_level(interaction.user.id)
        if level >= 15:
            if role in interaction.user.roles:
                await interaction.response.send_message("–û—à–∏–±–∫–∞! –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ø—Ä–æ—Ö–æ–¥–∫–∞!", ephemeral=True)
            else:
                await interaction.response.send_modal(Questionnaire())
        else:
            await interaction.response.send_message("–û—à–∏–±–∫–∞! –£ –≤–∞—Å –Ω–µ—Ç 15 —É—Ä–æ–≤–Ω—è!", ephemeral=True)

    @discord.ui.button(label='–û–ø–ª–∞—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç—É(–Ω–∞–ø—Ä—è–º—É—é)', style=discord.ButtonStyle.green, emoji='üí≥',
                       custom_id='persistent_view:qiwi')
    async def other(self, interaction: discord.Interaction, button: discord.ui.Button):
        guild = interaction.guild
        category = get(guild.categories, name="—Ç–∏–∫–µ—Ç—ã")
        rol_staff = guild.get_role(id_staff_role)
        channel = await guild.create_text_channel(name=f'‚ùî„Éª–º–∞—Ä–∫–µ—Ç-{interaction.user.name}', category=category)

        await channel.set_permissions(interaction.guild.get_role(interaction.guild.id), send_messages=False,
                                      read_messages=False)
        await channel.set_permissions(interaction.user, send_messages=True, read_messages=True, add_reactions=True,
                                      embed_links=True, attach_files=True, read_message_history=True,
                                      external_emojis=True)
        await channel.set_permissions(rol_staff, send_messages=True, read_messages=True, add_reactions=True,
                                      embed_links=True, attach_files=True, read_message_history=True,
                                      external_emojis=True, manage_messages=True)

        embed_question = discord.Embed(title=f'–ú–∞—Ä–∫–µ—Ç - –ü—Ä–∏–≤–µ—Ç, {interaction.user.name}!',
                                       description='–í —ç—Ç–æ–º —Ç–∏–∫–µ—Ç–µ —Ç—ã –º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å –ø—Ä–æ—Ö–æ–¥–∫—É.\n\n–ï—Å–ª–∏ –í—ã –Ω—É–∂–¥–∞–µ—Ç–µ—Å—å –≤ —Å—Ä–æ—á–Ω–æ–π –ø–æ–º–æ—â–∏ - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É `üîî –í—ã–∑–≤–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏—é`.',
                                       color=embed_color)
        embed_question.set_thumbnail(url=interaction.user.avatar)

        await channel.send(interaction.user.mention, embed=embed_question, view=Call_Staff())
        embed_question = discord.Embed(
            description=f"–°–µ–π—á–∞—Å –≤—ã –¥–æ–ª–∂–Ω—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ –∫–∞—Ä—Ç—É 0001-0002-1234-5678 –ø–ª–∞—Ç–µ–∂ –≤ —Ä–∞–∑–º–µ—Ä–µ 79‚ÇΩ —Å –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ–º `user:'{interaction.user}' id:'{interaction.user.id}' ch:'{interaction.channel}'`\n"
                        f"–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —Ä–∞—Å—Å–º–æ—Ç—Ä—è—Ç –ø–ª–∞—Ç–µ–∂ –∏ –≤—ã–¥–∞–¥—É—Ç –≤–∞–º –ø—Ä–æ—Ö–æ–¥–∫—É.",
            color=embed_color)
        embed_question.set_thumbnail(url=interaction.user.avatar)
        await channel.send(interaction.user.mention, embed=embed_question, view=Complete_Pay())


class Shop_Product(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label='–ö—É–ø–∏—Ç—å –ø—Ä–æ—Ö–æ–¥–∫—É', style=discord.ButtonStyle.blurple, emoji='üéü',
                       custom_id='persistent_view:prohodka–∞')
    async def payprohodkaa(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã", view=Choose_Method_Pay(), ephemeral=True)


class ticket(commands.Cog):
    def __init__(self, bot: commands.Bot) -> None:
        self.bot = bot
        bot.add_view(TicketStart())
        bot.add_view(Call_Staff())
        bot.add_view(Close_Podt())
        bot.add_view(Shop_Product())
        bot.add_view(Choose_Method_Pay())
        bot.add_view(Complete_Pay())

    @commands.Cog.listener()
    async def on_ready(self):
        print("! > –ö–æ–≥–∏ —Å —Ç–∏–∫–µ—Ç–æ–º —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã")

    @commands.Cog.listener()
    async def on_command_error(self, ctx, error):
        if isinstance(error, commands.MissingPermissions):
            await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        if isinstance(error, commands.BotMissingPermissions):
            await ctx.send("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        if isinstance(error, app_commands.MissingPermissions):
            await ctx.send("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        if isinstance(error, app_commands.BotMissingPermissions):
            await ctx.send("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")

    @app_commands.command(name="setup_oplata", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω")
    @app_commands.checks.has_any_role(968905407697387520)
    async def __oplata(self, interaction):
        await interaction.channel.send(
            embed = discord.Embed(title ='–ú–∞–≥–∞–∑–∏–Ω', description = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω. –¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –ø—Ä–æ—Ö–æ–¥–∫—É –∏–ª–∏ –µ—â–µ —á—Ç–æ-—Ç–æ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å', colour = discord.Color.gold()), view=Shop_Product())

    # Setup ticket command
    @app_commands.command(name="setup_ticket", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∏–∫–µ—Ç")
    @app_commands.checks.has_any_role(968905407697387520)
    async def __ticket(self,interaction):
        await interaction.channel.send(
            embed=discord.Embed(title='–¢–∏–∫–µ—Ç—ã',
                                description='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —Ç–∏–∫–µ—Ç–æ–≤.\n–ó–¥–µ—Å—å –í–∞–º –ø–æ–º–æ–≥—É—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —Å –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–æ–º/–ø—Ä–æ–±–ª–µ–º–æ–π/–ø–æ–¥–∞—á–µ–π –¥–µ–ª–∞ –Ω–∞ —Å—É–¥.\n\n–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É `–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç` –Ω–∏–∂–µ.',
                                colour=discord.Color.gold()), view=TicketStart())

    @app_commands.checks.has_any_role(968905407697387520)
    @app_commands.command(name="rank", description="–í–∞—à —Ä–∞–Ω–≥")
    async def rank(self, interaction):
        xp = await mee6API.levels.get_user_xp(interaction.user.id)
        level = await mee6API.levels.get_user_level(interaction.user.id)
        embed = discord.Embed(title=f"–†–∞–Ω–≥ {interaction.user}", color=0x49aa3c)
        embed.add_field(name="–í–∞—à —É—Ä–æ–≤–µ–Ω—å: ", value=f"{level}", inline=True)
        embed.add_field(name="–í–∞—à exp: ", value=f"{xp}", inline=True)
        embed.set_footer(text="¬© MineSpace 2023")
        await interaction.response.send_message(embed=embed)


async def setup(bot: commands.Bot) -> None:
    await bot.add_cog(ticket(bot),guild=discord.Object(id=1087033528568524902))